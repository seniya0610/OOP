#include <iostream>
#include <string>
using namespace std;

// Forward declarations
class Mentor;
class Student;
class Sport;
class Skill;

// Skill Class
class Skill {
private:
    int skillID;
    string skillName;
    string description;

public:
    
    Skill() {
        skillID = 0;
        skillName = "";
        description = "";
    }

    Skill(int ID, string name, string d) {
        skillID = ID;
        skillName = name;
        description = d;
    }

    void display() const {
        cout << "Skill ID: " << skillID << endl;
        cout << "Skill Name: " << skillName << endl;
        cout << "Description: " << description << endl;
    }

    void updateSkillDescription(string newDescription) {
        description = newDescription;
        cout << "Skill description updated.\n";
    }

    int getSkillID() const {
        return skillID;
    }

    string getSkillName() const {
        return skillName;
    }

    string getSkillDescription() const {
        return description;
    }
};

class Sport {
private:
    int sportID;
    string name;
    string description;
    Skill requiredSkills[3];
    int skillCount;

public:

    Sport(int id, string n, string d) {
        sportID = id;
        name = n;
        description = d;
        skillCount = 0;
    }

    Sport() {
        sportID = 0;
        name = "";
        description = "";
        skillCount = 0;
    }

    void addSkill(Skill s) {
        if (skillCount < 3) {
            requiredSkills[skillCount] = s;
            skillCount++;
            cout << "Skill added to " << name << ".\n";
        } else {
            cout << "Cannot add more skills, limit reached.\n";
        }
    }

    void removeSkill(int sID) {
        for (int i = 0; i < skillCount; i++) {
            if (requiredSkills[i].getSkillID() == sID) {
                for (int j = i; j < skillCount - 1; j++) {
                    requiredSkills[j] = requiredSkills[j + 1];
                }
                skillCount--;
                cout << "Skill removed.\n";
                return;
            }
        }
        cout << "Skill not found.\n";
    }

    void showSportDetails() const {
        cout << "Sport ID: " << sportID << endl;
        cout << "Name: " << name << endl;
        cout << "Description: " << description << endl;
        cout << "Required Skills:\n";
        for (int i = 0; i < skillCount; i++) {
            requiredSkills[i].display();
        }
    }

    int getSportID() const {
        return sportID;
    }
};

int main() {
   
    return 0;
}
